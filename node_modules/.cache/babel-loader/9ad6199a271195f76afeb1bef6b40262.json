{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @fileoverview Slideshow component that given an array of slide descriptions\n * of mixed types, renders the slides and automatically plays the slideshow for\n * the given durations\n */\nimport React, { Component } from 'react';\nimport { config } from '@fortawesome/fontawesome-svg-core';\nimport getVideoId from 'get-video-id';\nimport YouTube from 'react-youtube';\nconfig.autoAddCss = false;\nvar DEFAULT_COLOR = '#95a5a6';\nvar DEFAULT_URL = 'https://www.youtube.com/watch?v=9xwazD5SyVg';\n\nvar YoutubeContent = /*#__PURE__*/function (_Component) {\n  _inherits(YoutubeContent, _Component);\n\n  var _super = _createSuper(YoutubeContent);\n\n  function YoutubeContent(props) {\n    var _this;\n\n    _classCallCheck(this, YoutubeContent);\n\n    _this = _super.call(this, props);\n    _this.iframe = React.createRef();\n    return _this;\n  }\n\n  _createClass(YoutubeContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$data = this.props.data;\n      _this$props$data = _this$props$data === void 0 ? {} : _this$props$data;\n      var title = _this$props$data.title,\n          _this$props$data$url = _this$props$data.url,\n          url = _this$props$data$url === void 0 ? DEFAULT_URL : _this$props$data$url,\n          _this$props$data$colo = _this$props$data.color,\n          color = _this$props$data$colo === void 0 ? DEFAULT_COLOR : _this$props$data$colo;\n\n      var _getVideoId = getVideoId(url),\n          id = _getVideoId.id,\n          service = _getVideoId.service;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: _JSXStyle.dynamic([[\"930190573\", [color]]]) + \" \" + 'youtube'\n      }, title && /*#__PURE__*/React.createElement(\"div\", {\n        className: _JSXStyle.dynamic([[\"930190573\", [color]]]) + \" \" + 'titleConainer'\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: _JSXStyle.dynamic([[\"930190573\", [color]]]) + \" \" + 'title'\n      }, title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: _JSXStyle.dynamic([[\"930190573\", [color]]]) + \" \" + 'iframeContainer'\n      }, !id || service !== 'youtube' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: _JSXStyle.dynamic([[\"930190573\", [color]]])\n      }, \"Invalid Youtube URL\") : /*#__PURE__*/React.createElement(YouTube, {\n        containerClassName: 'youtube-container-nojsx',\n        videoId: id,\n        opts: {\n          /* eslint-disable camelcase */\n          height: '100%',\n          width: '100%',\n          playerVars: {\n            autoplay: 1,\n            controls: 0,\n            start: 0,\n            cc_load_policy: 0,\n            fs: 0,\n            iv_load_policy: 3,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0\n          }\n          /* eslint-enable camelcase */\n\n        }\n      })), /*#__PURE__*/React.createElement(\"style\", null, \"\\n                .youtube-container-nojsx {\\n                  width: 100%;\\n                  height: 100%;\\n                  min-height: 100%;\\n                }\\n              \"), /*#__PURE__*/React.createElement(_JSXStyle, {\n        id: \"930190573\",\n        dynamic: [color]\n      }, \".youtube.__jsx-style-dynamic-selector{position:relative;box-sizing:border-box;height:100%;width:100%;background:\".concat(color, \";-webkit-flex:1;-ms-flex:1;flex:1;font-family:'Open Sans',sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.youtube.__jsx-style-dynamic-selector .iframeContainer.__jsx-style-dynamic-selector{-webkit-flex:1;-ms-flex:1;flex:1;border:none;overflow:hidden;}.youtube.__jsx-style-dynamic-selector .iframe.__jsx-style-dynamic-selector{-webkit-flex:1;-ms-flex:1;flex:1;border:none;width:100%;height:100%;}.youtube.__jsx-style-dynamic-selector .titleConainer.__jsx-style-dynamic-selector{padding:12px;}.youtube.__jsx-style-dynamic-selector .title.__jsx-style-dynamic-selector{font-family:'Open Sans',sans-serif;border-left:3px solid rgba(255,255,255,0.5);font-size:16px;padding-left:12px;font-weight:600;text-transform:uppercase;z-index:1;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xc7ZW064+ZMlxcRGVza3RvcFxc67O16rWs7J6R7JeF7KSRXFxkaWdpdGFsc2lnbmFnZS1lZGl0ICgzKVxcZGlnaXRhbHNpZ25hZ2UtZWRpdFxcd2lkZ2V0c1xceW91dHViZVxcc3JjXFxZb3V0dWJlQ29udGVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRVcsQUFHaUMsQUFXWCxBQUtBLEFBTU0sQUFHdUIsYUFGdEMsS0F0QndCLGVBV1YsQUFLQSxFQVNtQyxLQXhCbkMsS0FXSSxBQUtMLE9BZkEsSUFnQkMsS0FMZCxFQVYwQyxLQWdCMUMsV0FPaUIsZUFDRyxTQXZCWCxTQXdCUyxnQkFDUyxRQXhCVyxpQkF5QjFCLFVBQ1osUUF6QmUsMEVBQ1MsOEVBQ3hCIiwiZmlsZSI6IkM6XFxVc2Vyc1xc7ZW064+ZMlxcRGVza3RvcFxc67O16rWs7J6R7JeF7KSRXFxkaWdpdGFsc2lnbmFnZS1lZGl0ICgzKVxcZGlnaXRhbHNpZ25hZ2UtZWRpdFxcd2lkZ2V0c1xceW91dHViZVxcc3JjXFxZb3V0dWJlQ29udGVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBTbGlkZXNob3cgY29tcG9uZW50IHRoYXQgZ2l2ZW4gYW4gYXJyYXkgb2Ygc2xpZGUgZGVzY3JpcHRpb25zXG4gKiBvZiBtaXhlZCB0eXBlcywgcmVuZGVycyB0aGUgc2xpZGVzIGFuZCBhdXRvbWF0aWNhbGx5IHBsYXlzIHRoZSBzbGlkZXNob3cgZm9yXG4gKiB0aGUgZ2l2ZW4gZHVyYXRpb25zXG4gKi9cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlJ1xuaW1wb3J0IGdldFZpZGVvSWQgZnJvbSAnZ2V0LXZpZGVvLWlkJ1xuaW1wb3J0IFlvdVR1YmUgZnJvbSAncmVhY3QteW91dHViZSdcblxuY29uZmlnLmF1dG9BZGRDc3MgPSBmYWxzZVxuXG5jb25zdCBERUZBVUxUX0NPTE9SID0gJyM5NWE1YTYnXG5jb25zdCBERUZBVUxUX1VSTCA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTl4d2F6RDVTeVZnJ1xuXG5jbGFzcyBZb3V0dWJlQ29udGVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG4gICAgdGhpcy5pZnJhbWUgPSBSZWFjdC5jcmVhdGVSZWYoKVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZGF0YTogeyB0aXRsZSwgdXJsID0gREVGQVVMVF9VUkwsIGNvbG9yID0gREVGQVVMVF9DT0xPUiB9ID0ge30gfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCB7IGlkLCBzZXJ2aWNlIH0gPSBnZXRWaWRlb0lkKHVybClcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J3lvdXR1YmUnPlxuICAgICAgICB7dGl0bGUgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0aXRsZUNvbmFpbmVyJz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0aXRsZSc+e3RpdGxlfTwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0naWZyYW1lQ29udGFpbmVyJz5cbiAgICAgICAgICB7IWlkIHx8IHNlcnZpY2UgIT09ICd5b3V0dWJlJyA/IChcbiAgICAgICAgICAgIDxkaXY+SW52YWxpZCBZb3V0dWJlIFVSTDwvZGl2PlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8WW91VHViZVxuICAgICAgICAgICAgICBjb250YWluZXJDbGFzc05hbWU9eyd5b3V0dWJlLWNvbnRhaW5lci1ub2pzeCd9XG4gICAgICAgICAgICAgIHZpZGVvSWQ9e2lkfVxuICAgICAgICAgICAgICBvcHRzPXt7XG4gICAgICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICBwbGF5ZXJWYXJzOiB7XG4gICAgICAgICAgICAgICAgICBhdXRvcGxheTogMSxcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xzOiAwLFxuICAgICAgICAgICAgICAgICAgc3RhcnQ6IDAsXG4gICAgICAgICAgICAgICAgICBjY19sb2FkX3BvbGljeTogMCxcbiAgICAgICAgICAgICAgICAgIGZzOiAwLFxuICAgICAgICAgICAgICAgICAgaXZfbG9hZF9wb2xpY3k6IDMsXG4gICAgICAgICAgICAgICAgICBtb2Rlc3RicmFuZGluZzogMSxcbiAgICAgICAgICAgICAgICAgIHJlbDogMCxcbiAgICAgICAgICAgICAgICAgIHNob3dpbmZvOiAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qIGVzbGludC1lbmFibGUgY2FtZWxjYXNlICovXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8c3R5bGU+XG4gICAgICAgICAge2BcbiAgICAgICAgICAgICAgICAueW91dHViZS1jb250YWluZXItbm9qc3gge1xuICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYH1cbiAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAgICB7YFxuICAgICAgICAgICAgLnlvdXR1YmUge1xuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAueW91dHViZSAuaWZyYW1lQ29udGFpbmVyIHtcbiAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnlvdXR1YmUgLmlmcmFtZSB7XG4gICAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC55b3V0dWJlIC50aXRsZUNvbmFpbmVyIHtcbiAgICAgICAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC55b3V0dWJlIC50aXRsZSB7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMnB4O1xuICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgWW91dHViZUNvbnRlbnRcbiJdfQ== */\\n/*@ sourceURL=C:\\\\Users\\\\\\uD574\\uB3D92\\\\Desktop\\\\\\uBCF5\\uAD6C\\uC791\\uC5C5\\uC911\\\\digitalsignage-edit (3)\\\\digitalsignage-edit\\\\widgets\\\\youtube\\\\src\\\\YoutubeContent.js */\")));\n    }\n  }]);\n\n  return YoutubeContent;\n}(Component);\n\nexport default YoutubeContent;","map":{"version":3,"sources":["C:/Users/해동2/Desktop/복구작업중/digitalsignage-edit (3)/digitalsignage-edit/widgets/youtube/src/YoutubeContent.js"],"names":["React","Component","config","getVideoId","YouTube","autoAddCss","DEFAULT_COLOR","DEFAULT_URL","YoutubeContent","props","iframe","createRef","data","title","url","color","id","service","height","width","playerVars","autoplay","controls","start","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo"],"mappings":";;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEAF,MAAM,CAACG,UAAP,GAAoB,KAApB;AAEA,IAAMC,aAAa,GAAG,SAAtB;AACA,IAAMC,WAAW,GAAG,6CAApB;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,MAAL,GAAcV,KAAK,CAACW,SAAN,EAAd;AAFiB;AAGlB;;;;6BAEQ;AAAA,6BACoE,KAAKF,KADzE,CACCG,IADD;AAAA,uDAC6D,EAD7D;AAAA,UACSC,KADT,oBACSA,KADT;AAAA,kDACgBC,GADhB;AAAA,UACgBA,GADhB,qCACsBP,WADtB;AAAA,mDACmCQ,KADnC;AAAA,UACmCA,KADnC,sCAC2CT,aAD3C;;AAAA,wBAEiBH,UAAU,CAACW,GAAD,CAF3B;AAAA,UAECE,EAFD,eAECA,EAFD;AAAA,UAEKC,OAFL,eAEKA,OAFL;;AAGP,0BACE;AAAA,qDAiDsBF,KAjDtB,aAAe;AAAf,SACGF,KAAK,iBACJ;AAAA,qDA+CkBE,KA/ClB,aAAe;AAAf,sBACE;AAAA,qDA8CgBA,KA9ChB,aAAe;AAAf,SAAwBF,KAAxB,CADF,CAFJ,eAME;AAAA,qDA2CoBE,KA3CpB,aAAe;AAAf,SACG,CAACC,EAAD,IAAOC,OAAO,KAAK,SAAnB,gBACC;AAAA,qDAyCgBF,KAzChB;AAAA,+BADD,gBAGC,oBAAC,OAAD;AACE,QAAA,kBAAkB,EAAE,yBADtB;AAEE,QAAA,OAAO,EAAEC,EAFX;AAGE,QAAA,IAAI,EAAE;AACJ;AACAE,UAAAA,MAAM,EAAE,MAFJ;AAGJC,UAAAA,KAAK,EAAE,MAHH;AAIJC,UAAAA,UAAU,EAAE;AACVC,YAAAA,QAAQ,EAAE,CADA;AAEVC,YAAAA,QAAQ,EAAE,CAFA;AAGVC,YAAAA,KAAK,EAAE,CAHG;AAIVC,YAAAA,cAAc,EAAE,CAJN;AAKVC,YAAAA,EAAE,EAAE,CALM;AAMVC,YAAAA,cAAc,EAAE,CANN;AAOVC,YAAAA,cAAc,EAAE,CAPN;AAQVC,YAAAA,GAAG,EAAE,CARK;AASVC,YAAAA,QAAQ,EAAE;AATA;AAWZ;;AAfI;AAHR,QAJJ,CANF,eAiCE,2NAjCF;AAAA;AAAA,kBAiDsBd,KAjDtB;AAAA,mIAiDsBA,KAjDtB,s/LADF;AAmFD;;;;EA5F0Bd,S;;AA+F7B,eAAeO,cAAf","sourcesContent":["/**\n * @fileoverview Slideshow component that given an array of slide descriptions\n * of mixed types, renders the slides and automatically plays the slideshow for\n * the given durations\n */\n\nimport React, { Component } from 'react'\nimport { config } from '@fortawesome/fontawesome-svg-core'\nimport getVideoId from 'get-video-id'\nimport YouTube from 'react-youtube'\n\nconfig.autoAddCss = false\n\nconst DEFAULT_COLOR = '#95a5a6'\nconst DEFAULT_URL = 'https://www.youtube.com/watch?v=9xwazD5SyVg'\n\nclass YoutubeContent extends Component {\n  constructor(props) {\n    super(props)\n    this.iframe = React.createRef()\n  }\n\n  render() {\n    const { data: { title, url = DEFAULT_URL, color = DEFAULT_COLOR } = {} } = this.props\n    const { id, service } = getVideoId(url)\n    return (\n      <div className='youtube'>\n        {title && (\n          <div className='titleConainer'>\n            <div className='title'>{title}</div>\n          </div>\n        )}\n        <div className='iframeContainer'>\n          {!id || service !== 'youtube' ? (\n            <div>Invalid Youtube URL</div>\n          ) : (\n            <YouTube\n              containerClassName={'youtube-container-nojsx'}\n              videoId={id}\n              opts={{\n                /* eslint-disable camelcase */\n                height: '100%',\n                width: '100%',\n                playerVars: {\n                  autoplay: 1,\n                  controls: 0,\n                  start: 0,\n                  cc_load_policy: 0,\n                  fs: 0,\n                  iv_load_policy: 3,\n                  modestbranding: 1,\n                  rel: 0,\n                  showinfo: 0\n                }\n                /* eslint-enable camelcase */\n              }}\n            />\n          )}\n        </div>\n        <style>\n          {`\n                .youtube-container-nojsx {\n                  width: 100%;\n                  height: 100%;\n                  min-height: 100%;\n                }\n              `}\n        </style>\n        <style jsx>\n          {`\n            .youtube {\n              position: relative;\n              box-sizing: border-box;\n              height: 100%;\n              width: 100%;\n              background: ${color};\n              flex: 1;\n              font-family: 'Open Sans', sans-serif;\n              display: flex;\n              flex-direction: column;\n            }\n            .youtube .iframeContainer {\n              flex: 1;\n              border: none;\n              overflow: hidden;\n            }\n            .youtube .iframe {\n              flex: 1;\n              border: none;\n              width: 100%;\n              height: 100%;\n            }\n            .youtube .titleConainer {\n              padding: 12px;\n            }\n            .youtube .title {\n              font-family: 'Open Sans', sans-serif;\n              border-left: 3px solid rgba(255, 255, 255, 0.5);\n              font-size: 16px;\n              padding-left: 12px;\n              font-weight: 600;\n              text-transform: uppercase;\n              z-index: 1;\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n}\n\nexport default YoutubeContent\n"]},"metadata":{},"sourceType":"module"}