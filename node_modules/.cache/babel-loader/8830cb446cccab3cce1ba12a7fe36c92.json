{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nvar ColorPicker = /*#__PURE__*/function (_React$Component) {\n  _inherits(ColorPicker, _React$Component);\n\n  var _super = _createSuper(ColorPicker);\n\n  function ColorPicker(props) {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (color) {\n      var _this$props$onChange = _this.props.onChange,\n          onChange = _this$props$onChange === void 0 ? function () {} : _this$props$onChange;\n\n      _this.setState({\n        color: color.hex\n      }, function () {\n        onChange(color.hex);\n      });\n    });\n\n    _this.state = {\n      displayColorPicker: false,\n      color: props.color || '#FFFFFF'\n    };\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"render\",\n    value: function render() {\n      var styles = reactCSS({\n        default: {\n          color: {\n            width: '64px',\n            height: '42px',\n            borderRadius: '2px',\n            background: this.state.color\n          },\n          swatch: {\n            padding: '5px',\n            background: '#fff',\n            borderRadius: '1px',\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n            display: 'inline-block',\n            cursor: 'pointer'\n          },\n          popover: {\n            position: 'absolute',\n            zIndex: '2'\n          },\n          cover: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px'\n          }\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.swatch,\n        onClick: this.handleClick\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.color\n      })), this.state.displayColorPicker ? /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.popover\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.cover,\n        onClick: this.handleClose\n      }), /*#__PURE__*/React.createElement(SketchPicker, {\n        color: this.state.color,\n        onChange: this.handleChange\n      })) : null);\n    }\n  }]);\n\n  return ColorPicker;\n}(React.Component);\n\nexport { ColorPicker as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/digitalsignage-master (2)/digitalsignage-master/components/Form/ColorPicker.js"],"names":["React","reactCSS","SketchPicker","ColorPicker","props","setState","displayColorPicker","state","color","onChange","hex","styles","default","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","handleClick","handleClose","handleChange","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;;IAEqBC,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,kEAQL,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAlC,OAAd;AACD,KAVkB;;AAAA,kEAYL,YAAM;AAClB,YAAKD,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KAdkB;;AAAA,mEAgBJ,UAAAE,KAAK,EAAI;AAAA,iCACU,MAAKJ,KADf,CACdK,QADc;AAAA,UACdA,QADc,qCACH,YAAM,CAAE,CADL;;AAEtB,YAAKJ,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,OAAd,EAAoC,YAAM;AACxCD,QAAAA,QAAQ,CAACD,KAAK,CAACE,GAAP,CAAR;AACD,OAFD;AAGD,KArBkB;;AAEjB,UAAKH,KAAL,GAAa;AACXD,MAAAA,kBAAkB,EAAE,KADT;AAEXE,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,IAAe;AAFX,KAAb;AAFiB;AAMlB;;;;6BAiBQ;AACP,UAAMG,MAAM,GAAGV,QAAQ,CAAC;AACtBW,QAAAA,OAAO,EAAE;AACPJ,UAAAA,KAAK,EAAE;AACLK,YAAAA,KAAK,EAAE,MADF;AAELC,YAAAA,MAAM,EAAE,MAFH;AAGLC,YAAAA,YAAY,EAAE,KAHT;AAILC,YAAAA,UAAU,EAAE,KAAKT,KAAL,CAAWC;AAJlB,WADA;AAOPS,UAAAA,MAAM,EAAE;AACNC,YAAAA,OAAO,EAAE,KADH;AAENF,YAAAA,UAAU,EAAE,MAFN;AAGND,YAAAA,YAAY,EAAE,KAHR;AAINI,YAAAA,SAAS,EAAE,0BAJL;AAKNC,YAAAA,OAAO,EAAE,cALH;AAMNC,YAAAA,MAAM,EAAE;AANF,WAPD;AAePC,UAAAA,OAAO,EAAE;AACPC,YAAAA,QAAQ,EAAE,UADH;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAfF;AAmBPC,UAAAA,KAAK,EAAE;AACLF,YAAAA,QAAQ,EAAE,OADL;AAELG,YAAAA,GAAG,EAAE,KAFA;AAGLC,YAAAA,KAAK,EAAE,KAHF;AAILC,YAAAA,MAAM,EAAE,KAJH;AAKLC,YAAAA,IAAI,EAAE;AALD;AAnBA;AADa,OAAD,CAAvB;AA8BA,0BACE,8CACE;AAAK,QAAA,KAAK,EAAElB,MAAM,CAACM,MAAnB;AAA2B,QAAA,OAAO,EAAE,KAAKa;AAAzC,sBACE;AAAK,QAAA,KAAK,EAAEnB,MAAM,CAACH;AAAnB,QADF,CADF,EAIG,KAAKD,KAAL,CAAWD,kBAAX,gBACC;AAAK,QAAA,KAAK,EAAEK,MAAM,CAACW;AAAnB,sBACE;AAAK,QAAA,KAAK,EAAEX,MAAM,CAACc,KAAnB;AAA0B,QAAA,OAAO,EAAE,KAAKM;AAAxC,QADF,eAEE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,KAAhC;AAAuC,QAAA,QAAQ,EAAE,KAAKwB;AAAtD,QAFF,CADD,GAKG,IATN,CADF;AAaD;;;;EApEsChC,KAAK,CAACiC,S;;SAA1B9B,W","sourcesContent":["import React from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\n\nexport default class ColorPicker extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayColorPicker: false,\n      color: props.color || '#FFFFFF'\n    }\n  }\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  }\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  }\n\n  handleChange = color => {\n    const { onChange = () => {} } = this.props\n    this.setState({ color: color.hex }, () => {\n      onChange(color.hex)\n    })\n  }\n\n  render() {\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: '64px',\n          height: '42px',\n          borderRadius: '2px',\n          background: this.state.color\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer'\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2'\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px'\n        }\n      }\n    })\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </div>\n        {this.state.displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <SketchPicker color={this.state.color} onChange={this.handleChange} />\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}