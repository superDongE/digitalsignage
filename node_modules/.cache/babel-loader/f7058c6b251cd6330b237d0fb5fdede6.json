{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Input } from '../../../components/Form';\nimport { getSlideshows } from '../../../actions/slideshow';\n\nvar SlideshowOptions = /*#__PURE__*/function (_Component) {\n  _inherits(SlideshowOptions, _Component);\n\n  var _super = _createSuper(SlideshowOptions);\n\n  function SlideshowOptions(props) {\n    var _this;\n\n    _classCallCheck(this, SlideshowOptions);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (name, value) {\n      var _this$props$onChange = _this.props.onChange,\n          onChange = _this$props$onChange === void 0 ? function () {} : _this$props$onChange;\n\n      if (name == 'slideShowId') {\n        onChange(value);\n      }\n    });\n\n    _this.state = {\n      slideshows: []\n    };\n    return _this;\n  }\n\n  _createClass(SlideshowOptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getSlideshows().then(function (data) {\n        var slideshows = data.map(function (slideshow) {\n          return {\n            id: slideshow._id,\n            label: slideshow.title || '제목 없음'\n          };\n        });\n\n        _this2.setState({\n          slideshows: slideshows\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      var slideshows = this.state.slideshows;\n      return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"jsx-1422219490\"\n      }, \"Widget: Slideshow\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"jsx-1422219490\"\n      }, \"Select which slideshow you would like this widget to display\"), /*#__PURE__*/React.createElement(Input, {\n        inline: false,\n        type: 'select',\n        name: 'slideShowId',\n        value: data,\n        onChange: this.handleChange,\n        choices: slideshows\n      }), /*#__PURE__*/React.createElement(_JSXStyle, {\n        id: \"1422219490\"\n      }, \"h3.jsx-1422219490,p.jsx-1422219490{font-family:'Open Sans',sans-serif;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcdXNlclxcRGVza3RvcFxcZGlnaXRhbHNpZ25hZ2UtbWFzdGVyXFx3aWRnZXRzXFxzbGlkZXNob3dcXHNyY1xcU2xpZGVzaG93T3B0aW9ucy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Q1csQUFJbUQsbUNBQ3RDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcdXNlclxcRGVza3RvcFxcZGlnaXRhbHNpZ25hZ2UtbWFzdGVyXFx3aWRnZXRzXFxzbGlkZXNob3dcXHNyY1xcU2xpZGVzaG93T3B0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IEZvcm0sIElucHV0IH0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9Gb3JtJ1xuaW1wb3J0IHsgZ2V0U2xpZGVzaG93cyB9IGZyb20gJy4uLy4uLy4uL2FjdGlvbnMvc2xpZGVzaG93J1xuXG5jbGFzcyBTbGlkZXNob3dPcHRpb25zIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgc2xpZGVzaG93czogW11cbiAgICB9XG4gIH1cbiAgaGFuZGxlQ2hhbmdlID0gKG5hbWUsIHZhbHVlKSA9PiB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSA9ICgpID0+IHt9IH0gPSB0aGlzLnByb3BzXG4gICAgaWYgKG5hbWUgPT0gJ3NsaWRlU2hvd0lkJykge1xuICAgICAgb25DaGFuZ2UodmFsdWUpXG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgZ2V0U2xpZGVzaG93cygpLnRoZW4oZGF0YSA9PiB7XG4gICAgICBjb25zdCBzbGlkZXNob3dzID0gZGF0YS5tYXAoc2xpZGVzaG93ID0+ICh7XG4gICAgICAgIGlkOiBzbGlkZXNob3cuX2lkLFxuICAgICAgICBsYWJlbDogc2xpZGVzaG93LnRpdGxlIHx8ICfsoJzrqqkg7JeG7J2MJ1xuICAgICAgfSkpXG4gICAgICB0aGlzLnNldFN0YXRlKHsgc2xpZGVzaG93cyB9KVxuICAgIH0pXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgeyBzbGlkZXNob3dzIH0gPSB0aGlzLnN0YXRlXG4gICAgcmV0dXJuIChcbiAgICAgIDxGb3JtPlxuICAgICAgICA8aDM+V2lkZ2V0OiBTbGlkZXNob3c8L2gzPlxuICAgICAgICA8cD5TZWxlY3Qgd2hpY2ggc2xpZGVzaG93IHlvdSB3b3VsZCBsaWtlIHRoaXMgd2lkZ2V0IHRvIGRpc3BsYXk8L3A+XG4gICAgICAgIDxJbnB1dFxuICAgICAgICAgIGlubGluZT17ZmFsc2V9XG4gICAgICAgICAgdHlwZT17J3NlbGVjdCd9XG4gICAgICAgICAgbmFtZT17J3NsaWRlU2hvd0lkJ31cbiAgICAgICAgICB2YWx1ZT17ZGF0YX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgY2hvaWNlcz17c2xpZGVzaG93c31cbiAgICAgICAgLz5cbiAgICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAgICB7YFxuICAgICAgICAgICAgaDMsXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L0Zvcm0+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNsaWRlc2hvd09wdGlvbnNcbiJdfQ== */\\n/*@ sourceURL=C:\\\\Users\\\\user\\\\Desktop\\\\digitalsignage-master\\\\widgets\\\\slideshow\\\\src\\\\SlideshowOptions.js */\"));\n    }\n  }]);\n\n  return SlideshowOptions;\n}(Component);\n\nexport default SlideshowOptions;","map":{"version":3,"sources":["C:/Users/user/Desktop/digitalsignage-master/widgets/slideshow/src/SlideshowOptions.js"],"names":["React","Component","Form","Input","getSlideshows","SlideshowOptions","props","name","value","onChange","state","slideshows","then","data","map","slideshow","id","_id","label","title","setState","handleChange"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,0BAA5B;AACA,SAASC,aAAT,QAA8B,4BAA9B;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,mEAMJ,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,iCACE,MAAKF,KADP,CACtBG,QADsB;AAAA,UACtBA,QADsB,qCACX,YAAM,CAAE,CADG;;AAE9B,UAAIF,IAAI,IAAI,aAAZ,EAA2B;AACzBE,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAXkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAFiB;AAKlB;;;;wCAQmB;AAAA;;AAClBP,MAAAA,aAAa,GAAGQ,IAAhB,CAAqB,UAAAC,IAAI,EAAI;AAC3B,YAAMF,UAAU,GAAGE,IAAI,CAACC,GAAL,CAAS,UAAAC,SAAS;AAAA,iBAAK;AACxCC,YAAAA,EAAE,EAAED,SAAS,CAACE,GAD0B;AAExCC,YAAAA,KAAK,EAAEH,SAAS,CAACI,KAAV,IAAmB;AAFc,WAAL;AAAA,SAAlB,CAAnB;;AAIA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAET,UAAAA,UAAU,EAAVA;AAAF,SAAd;AACD,OAND;AAOD;;;6BAEQ;AAAA,UACCE,IADD,GACU,KAAKP,KADf,CACCO,IADD;AAAA,UAECF,UAFD,GAEgB,KAAKD,KAFrB,CAECC,UAFD;AAGP,0BACE,oBAAC,IAAD,qBACE;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA,wEAFF,eAGE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE,KADV;AAEE,QAAA,IAAI,EAAE,QAFR;AAGE,QAAA,IAAI,EAAE,aAHR;AAIE,QAAA,KAAK,EAAEE,IAJT;AAKE,QAAA,QAAQ,EAAE,KAAKQ,YALjB;AAME,QAAA,OAAO,EAAEV;AANX,QAHF;AAAA;AAAA,67EADF;AAsBD;;;;EAjD4BV,S;;AAoD/B,eAAeI,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Input } from '../../../components/Form'\nimport { getSlideshows } from '../../../actions/slideshow'\n\nclass SlideshowOptions extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      slideshows: []\n    }\n  }\n  handleChange = (name, value) => {\n    const { onChange = () => {} } = this.props\n    if (name == 'slideShowId') {\n      onChange(value)\n    }\n  }\n\n  componentDidMount() {\n    getSlideshows().then(data => {\n      const slideshows = data.map(slideshow => ({\n        id: slideshow._id,\n        label: slideshow.title || '제목 없음'\n      }))\n      this.setState({ slideshows })\n    })\n  }\n\n  render() {\n    const { data } = this.props\n    const { slideshows } = this.state\n    return (\n      <Form>\n        <h3>Widget: Slideshow</h3>\n        <p>Select which slideshow you would like this widget to display</p>\n        <Input\n          inline={false}\n          type={'select'}\n          name={'slideShowId'}\n          value={data}\n          onChange={this.handleChange}\n          choices={slideshows}\n        />\n        <style jsx>\n          {`\n            h3,\n            p {\n              font-family: 'Open Sans', sans-serif;\n            }\n          `}\n        </style>\n      </Form>\n    )\n  }\n}\n\nexport default SlideshowOptions\n"]},"metadata":{},"sourceType":"module"}