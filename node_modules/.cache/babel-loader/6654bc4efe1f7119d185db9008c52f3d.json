{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @fileoverview Slide component that given a slide type and its data renders it\n * along with its title and description.\n */\nimport GenericSlide from './Generic';\nimport getVideoId from 'get-video-id';\nimport YouTube from 'react-youtube';\n\nvar YoutubeSlide = /*#__PURE__*/function (_GenericSlide) {\n  _inherits(YoutubeSlide, _GenericSlide);\n\n  var _super = _createSuper(YoutubeSlide);\n\n  function YoutubeSlide(props) {\n    var _this;\n\n    _classCallCheck(this, YoutubeSlide);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleYoutubeLoaded\", function () {\n      _this.state.loading.resolve ? _this.state.loading.resolve() : _this.setState({\n        loading: {\n          promise: _Promise.resolve()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onYoutubeReady\", function (event) {\n      // access to player in all event handlers via event.target\n      _this.youtube = event.target;\n\n      _this.handleYoutubeLoaded();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stop\", function () {\n      if (_this.youtube) _this.youtube.pauseVideo() && _this.youtube.seekTo(0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function () {\n      if (_this.youtube) _this.youtube.playVideo();\n    });\n\n    _this.youtube = null;\n    return _this;\n  }\n\n  _createClass(YoutubeSlide, [{\n    key: \"renderSlideContent\",\n\n    /**\n     * Renders the inner content of the slide (ex. the photo, youtube iframe, etc)\n     * @param {string} data The slide's data (usually a URL or object ID)\n     * @returns {Component}\n     */\n    value: function renderSlideContent(data) {\n      var _getVideoId = getVideoId(data),\n          id = _getVideoId.id,\n          service = _getVideoId.service;\n      /* eslint-disable-next-line no-console */\n\n\n      if (!id || service !== 'youtube') console.error('Failed to parse Youtube URL');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jsx-2459362145\" + \" \" + 'youtube-container'\n      }, /*#__PURE__*/React.createElement(YouTube, {\n        containerClassName: 'youtube-container-nojsx',\n        videoId: id,\n        opts: {\n          /* eslint-disable camelcase */\n          height: '100%',\n          width: '100%',\n          playerVars: {\n            autoplay: 0,\n            controls: 0,\n            start: 0,\n            cc_load_policy: 0,\n            fs: 0,\n            iv_load_policy: 3,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0\n          }\n          /* eslint-enable camelcase */\n\n        },\n        onReady: this.onYoutubeReady\n      }), /*#__PURE__*/React.createElement(\"style\", null, \"\\n                .youtube-container-nojsx {\\n                  width: 100%;\\n                  height: 100%;\\n                  min-height: 100%;\\n                }\\n              \"), /*#__PURE__*/React.createElement(_JSXStyle, {\n        id: \"2459362145\"\n      }, \".youtube-container.jsx-2459362145{width:100%;height:100%;min-height:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcdXNlclxcRGVza3RvcFxccHJvamVjdFxcZGlnaXRhbHNpZ25hZ2UtbWFzdGVyICgyKVxcZGlnaXRhbHNpZ25hZ2UtbWFzdGVyXFx3aWRnZXRzXFxzbGlkZXNob3dcXHNyY1xcU2xpZGVcXFlvdXR1YmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0VXLEFBRzBCLFdBQ0MsWUFDSSxnQkFDbEIiLCJmaWxlIjoiQzpcXFVzZXJzXFx1c2VyXFxEZXNrdG9wXFxwcm9qZWN0XFxkaWdpdGFsc2lnbmFnZS1tYXN0ZXIgKDIpXFxkaWdpdGFsc2lnbmFnZS1tYXN0ZXJcXHdpZGdldHNcXHNsaWRlc2hvd1xcc3JjXFxTbGlkZVxcWW91dHViZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBTbGlkZSBjb21wb25lbnQgdGhhdCBnaXZlbiBhIHNsaWRlIHR5cGUgYW5kIGl0cyBkYXRhIHJlbmRlcnMgaXRcbiAqIGFsb25nIHdpdGggaXRzIHRpdGxlIGFuZCBkZXNjcmlwdGlvbi5cbiAqL1xuXG5pbXBvcnQgR2VuZXJpY1NsaWRlIGZyb20gJy4vR2VuZXJpYydcbmltcG9ydCBnZXRWaWRlb0lkIGZyb20gJ2dldC12aWRlby1pZCdcbmltcG9ydCBZb3VUdWJlIGZyb20gJ3JlYWN0LXlvdXR1YmUnXG5cbmNsYXNzIFlvdXR1YmVTbGlkZSBleHRlbmRzIEdlbmVyaWNTbGlkZSB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG4gICAgdGhpcy55b3V0dWJlID0gbnVsbFxuICB9XG5cbiAgaGFuZGxlWW91dHViZUxvYWRlZCA9ICgpID0+IHtcbiAgICB0aGlzLnN0YXRlLmxvYWRpbmcucmVzb2x2ZVxuICAgICAgPyB0aGlzLnN0YXRlLmxvYWRpbmcucmVzb2x2ZSgpXG4gICAgICA6IHRoaXMuc2V0U3RhdGUoeyBsb2FkaW5nOiB7IHByb21pc2U6IFByb21pc2UucmVzb2x2ZSgpIH0gfSlcbiAgfVxuXG4gIG9uWW91dHViZVJlYWR5ID0gZXZlbnQgPT4ge1xuICAgIC8vIGFjY2VzcyB0byBwbGF5ZXIgaW4gYWxsIGV2ZW50IGhhbmRsZXJzIHZpYSBldmVudC50YXJnZXRcbiAgICB0aGlzLnlvdXR1YmUgPSBldmVudC50YXJnZXRcbiAgICB0aGlzLmhhbmRsZVlvdXR1YmVMb2FkZWQoKVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbmRlcnMgdGhlIGlubmVyIGNvbnRlbnQgb2YgdGhlIHNsaWRlIChleC4gdGhlIHBob3RvLCB5b3V0dWJlIGlmcmFtZSwgZXRjKVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YSBUaGUgc2xpZGUncyBkYXRhICh1c3VhbGx5IGEgVVJMIG9yIG9iamVjdCBJRClcbiAgICogQHJldHVybnMge0NvbXBvbmVudH1cbiAgICovXG4gIHJlbmRlclNsaWRlQ29udGVudChkYXRhKSB7XG4gICAgY29uc3QgeyBpZCwgc2VydmljZSB9ID0gZ2V0VmlkZW9JZChkYXRhKVxuICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlICovXG4gICAgaWYgKCFpZCB8fCBzZXJ2aWNlICE9PSAneW91dHViZScpIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBwYXJzZSBZb3V0dWJlIFVSTCcpXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsneW91dHViZS1jb250YWluZXInfT5cbiAgICAgICAgPFlvdVR1YmVcbiAgICAgICAgICBjb250YWluZXJDbGFzc05hbWU9eyd5b3V0dWJlLWNvbnRhaW5lci1ub2pzeCd9XG4gICAgICAgICAgdmlkZW9JZD17aWR9XG4gICAgICAgICAgb3B0cz17e1xuICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4gICAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICBwbGF5ZXJWYXJzOiB7XG4gICAgICAgICAgICAgIGF1dG9wbGF5OiAwLFxuICAgICAgICAgICAgICBjb250cm9sczogMCxcbiAgICAgICAgICAgICAgc3RhcnQ6IDAsXG4gICAgICAgICAgICAgIGNjX2xvYWRfcG9saWN5OiAwLFxuICAgICAgICAgICAgICBmczogMCxcbiAgICAgICAgICAgICAgaXZfbG9hZF9wb2xpY3k6IDMsXG4gICAgICAgICAgICAgIG1vZGVzdGJyYW5kaW5nOiAxLFxuICAgICAgICAgICAgICByZWw6IDAsXG4gICAgICAgICAgICAgIHNob3dpbmZvOiAwXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIGNhbWVsY2FzZSAqL1xuICAgICAgICAgIH19XG4gICAgICAgICAgb25SZWFkeT17dGhpcy5vbllvdXR1YmVSZWFkeX1cbiAgICAgICAgLz5cbiAgICAgICAgPHN0eWxlPlxuICAgICAgICAgIHtgXG4gICAgICAgICAgICAgICAgLnlvdXR1YmUtY29udGFpbmVyLW5vanN4IHtcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgICAge2BcbiAgICAgICAgICAgIC55b3V0dWJlLWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgYH1cbiAgICAgICAgPC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wcyB0aGUgc2xpZGUncyBjb250ZW50IGZyb20gcGxheWluZyB3aGVuIHRoZSBzbGlkZSBpcyBvdXQgb2YgZm9jdXNcbiAgICovXG4gIHN0b3AgPSAoKSA9PiB7XG4gICAgaWYgKHRoaXMueW91dHViZSkgdGhpcy55b3V0dWJlLnBhdXNlVmlkZW8oKSAmJiB0aGlzLnlvdXR1YmUuc2Vla1RvKDApXG4gIH1cblxuICAvKipcbiAgICogU3RhcnRzIG9yIHJlc3VtZXMgdGhlIHNsaWRlJ3MgY29udGVudCB3aGVuIHRoZSBzbGlkZSBpcyBpbiBmb2N1c1xuICAgKi9cbiAgcGxheSA9ICgpID0+IHtcbiAgICBpZiAodGhpcy55b3V0dWJlKSB0aGlzLnlvdXR1YmUucGxheVZpZGVvKClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBZb3V0dWJlU2xpZGVcbiJdfQ== */\\n/*@ sourceURL=C:\\\\Users\\\\user\\\\Desktop\\\\project\\\\digitalsignage-master (2)\\\\digitalsignage-master\\\\widgets\\\\slideshow\\\\src\\\\Slide\\\\Youtube.js */\"));\n    }\n    /**\n     * Stops the slide's content from playing when the slide is out of focus\n     */\n\n  }]);\n\n  return YoutubeSlide;\n}(GenericSlide);\n\nexport default YoutubeSlide;","map":{"version":3,"sources":["C:/Users/user/Desktop/project/digitalsignage-master (2)/digitalsignage-master/widgets/slideshow/src/Slide/Youtube.js"],"names":["GenericSlide","getVideoId","YouTube","YoutubeSlide","props","state","loading","resolve","setState","promise","event","youtube","target","handleYoutubeLoaded","pauseVideo","seekTo","playVideo","data","id","service","console","error","height","width","playerVars","autoplay","controls","start","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","onYoutubeReady"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AAKA,OAAOA,YAAP,MAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,0EAKG,YAAM;AAC1B,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,GACI,MAAKF,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,EADJ,GAEI,MAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAEG,UAAAA,OAAO,EAAE,SAAQF,OAAR;AAAX;AAAX,OAAd,CAFJ;AAGD,KATkB;;AAAA,qEAWF,UAAAG,KAAK,EAAI;AACxB;AACA,YAAKC,OAAL,GAAeD,KAAK,CAACE,MAArB;;AACA,YAAKC,mBAAL;AACD,KAfkB;;AAAA,2DA2EZ,YAAM;AACX,UAAI,MAAKF,OAAT,EAAkB,MAAKA,OAAL,CAAaG,UAAb,MAA6B,MAAKH,OAAL,CAAaI,MAAb,CAAoB,CAApB,CAA7B;AACnB,KA7EkB;;AAAA,2DAkFZ,YAAM;AACX,UAAI,MAAKJ,OAAT,EAAkB,MAAKA,OAAL,CAAaK,SAAb;AACnB,KApFkB;;AAEjB,UAAKL,OAAL,GAAe,IAAf;AAFiB;AAGlB;;;;;AAcD;;;;;uCAKmBM,I,EAAM;AAAA,wBACChB,UAAU,CAACgB,IAAD,CADX;AAAA,UACfC,EADe,eACfA,EADe;AAAA,UACXC,OADW,eACXA,OADW;AAEvB;;;AACA,UAAI,CAACD,EAAD,IAAOC,OAAO,KAAK,SAAvB,EAAkCC,OAAO,CAACC,KAAR,CAAc,6BAAd;AAClC,0BACE;AAAA,4CAAgB;AAAhB,sBACE,oBAAC,OAAD;AACE,QAAA,kBAAkB,EAAE,yBADtB;AAEE,QAAA,OAAO,EAAEH,EAFX;AAGE,QAAA,IAAI,EAAE;AACJ;AACAI,UAAAA,MAAM,EAAE,MAFJ;AAGJC,UAAAA,KAAK,EAAE,MAHH;AAIJC,UAAAA,UAAU,EAAE;AACVC,YAAAA,QAAQ,EAAE,CADA;AAEVC,YAAAA,QAAQ,EAAE,CAFA;AAGVC,YAAAA,KAAK,EAAE,CAHG;AAIVC,YAAAA,cAAc,EAAE,CAJN;AAKVC,YAAAA,EAAE,EAAE,CALM;AAMVC,YAAAA,cAAc,EAAE,CANN;AAOVC,YAAAA,cAAc,EAAE,CAPN;AAQVC,YAAAA,GAAG,EAAE,CARK;AASVC,YAAAA,QAAQ,EAAE;AATA;AAWZ;;AAfI,SAHR;AAoBE,QAAA,OAAO,EAAE,KAAKC;AApBhB,QADF,eAuBE,2NAvBF;AAAA;AAAA,suIADF;AA4CD;AAED;;;;;;;EAzEyBlC,Y;;AAwF3B,eAAeG,YAAf","sourcesContent":["/**\n * @fileoverview Slide component that given a slide type and its data renders it\n * along with its title and description.\n */\n\nimport GenericSlide from './Generic'\nimport getVideoId from 'get-video-id'\nimport YouTube from 'react-youtube'\n\nclass YoutubeSlide extends GenericSlide {\n  constructor(props) {\n    super(props)\n    this.youtube = null\n  }\n\n  handleYoutubeLoaded = () => {\n    this.state.loading.resolve\n      ? this.state.loading.resolve()\n      : this.setState({ loading: { promise: Promise.resolve() } })\n  }\n\n  onYoutubeReady = event => {\n    // access to player in all event handlers via event.target\n    this.youtube = event.target\n    this.handleYoutubeLoaded()\n  }\n\n  /**\n   * Renders the inner content of the slide (ex. the photo, youtube iframe, etc)\n   * @param {string} data The slide's data (usually a URL or object ID)\n   * @returns {Component}\n   */\n  renderSlideContent(data) {\n    const { id, service } = getVideoId(data)\n    /* eslint-disable-next-line no-console */\n    if (!id || service !== 'youtube') console.error('Failed to parse Youtube URL')\n    return (\n      <div className={'youtube-container'}>\n        <YouTube\n          containerClassName={'youtube-container-nojsx'}\n          videoId={id}\n          opts={{\n            /* eslint-disable camelcase */\n            height: '100%',\n            width: '100%',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              start: 0,\n              cc_load_policy: 0,\n              fs: 0,\n              iv_load_policy: 3,\n              modestbranding: 1,\n              rel: 0,\n              showinfo: 0\n            }\n            /* eslint-enable camelcase */\n          }}\n          onReady={this.onYoutubeReady}\n        />\n        <style>\n          {`\n                .youtube-container-nojsx {\n                  width: 100%;\n                  height: 100%;\n                  min-height: 100%;\n                }\n              `}\n        </style>\n        <style jsx>\n          {`\n            .youtube-container {\n              width: 100%;\n              height: 100%;\n              min-height: 100%;\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n\n  /**\n   * Stops the slide's content from playing when the slide is out of focus\n   */\n  stop = () => {\n    if (this.youtube) this.youtube.pauseVideo() && this.youtube.seekTo(0)\n  }\n\n  /**\n   * Starts or resumes the slide's content when the slide is in focus\n   */\n  play = () => {\n    if (this.youtube) this.youtube.playVideo()\n  }\n}\n\nexport default YoutubeSlide\n"]},"metadata":{},"sourceType":"module"}