{"ast":null,"code":"import _Object$keys2 from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport axios from 'axios';\nexport var getSlides = function getSlides(slideshow) {\n  var host = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return axios.get(host + '/api/v1/slideshow/' + slideshow + '/slides').then(function (res) {\n    if (res && res.data) {\n      return res.data;\n    }\n  });\n};\nexport var getSlide = function getSlide(slide) {\n  var host = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return axios.get(host + '/api/v1/slide/' + slide).then(function (res) {\n    if (res && res.data) {\n      return res.data;\n    }\n  });\n};\nexport var deleteSlide = function deleteSlide(id) {\n  var host = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return axios.delete(host + '/api/v1/slide/' + id);\n};\nexport var updateSlide = function updateSlide(id, file, data) {\n  var host = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var formData = new FormData();\n\n  for (var _i = 0, _Object$keys = _Object$keys2(data); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    formData.append(key, data[key]);\n  }\n\n  if (file) formData.append('data', file);\n  return axios.patch(host + '/api/v1/slide/' + id, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport var addSlide = function addSlide(slideshow, file, data) {\n  var host = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var formData = new FormData();\n\n  for (var _i2 = 0, _Object$keys3 = _Object$keys2(data); _i2 < _Object$keys3.length; _i2++) {\n    var key = _Object$keys3[_i2];\n    formData.append(key, data[key]);\n  }\n\n  if (file) formData.append('data', file);\n  formData.append('slideshow', slideshow);\n  return axios.post(host + '/api/v1/slide', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport var standaloneUpload = function standaloneUpload(file) {\n  var host = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var formData = new FormData();\n  formData.append('data', file);\n  return axios.post(host + '/api/v1/slide/standalone_upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/digitalsignage-master (2)/digitalsignage-master/actions/slide.js"],"names":["axios","getSlides","slideshow","host","get","then","res","data","getSlide","slide","deleteSlide","id","delete","updateSlide","file","formData","FormData","key","append","patch","headers","addSlide","post","standaloneUpload"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const getSlides = (slideshow, host = '') => {\n  return axios.get(host + '/api/v1/slideshow/' + slideshow + '/slides').then(res => {\n    if (res && res.data) {\n      return res.data\n    }\n  })\n}\n\nexport const getSlide = (slide, host = '') => {\n  return axios.get(host + '/api/v1/slide/' + slide).then(res => {\n    if (res && res.data) {\n      return res.data\n    }\n  })\n}\n\nexport const deleteSlide = (id, host = '') => {\n  return axios.delete(host + '/api/v1/slide/' + id)\n}\n\nexport const updateSlide = (id, file, data, host = '') => {\n  const formData = new FormData()\n  for (const key of Object.keys(data)) {\n    formData.append(key, data[key])\n  }\n  if (file) formData.append('data', file)\n  return axios.patch(host + '/api/v1/slide/' + id, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\nexport const addSlide = (slideshow, file, data, host = '') => {\n  const formData = new FormData()\n  for (const key of Object.keys(data)) {\n    formData.append(key, data[key])\n  }\n  if (file) formData.append('data', file)\n  formData.append('slideshow', slideshow)\n  return axios.post(host + '/api/v1/slide', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\nexport const standaloneUpload = (file, host = '') => {\n  const formData = new FormData()\n  formData.append('data', file)\n  return axios.post(host + '/api/v1/slide/standalone_upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}