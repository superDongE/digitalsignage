{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Symbol$iterator from \"@babel/runtime-corejs2/core-js/symbol/iterator\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _Object$keys2 from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof _Symbol === \"undefined\" || o[_Symbol$iterator] == null) { if (_Array$isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = _getIterator(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport EmptyWidget from '../components/Widgets/EmptyWidget';\nimport EmptyWidgetOptions from '../components/Widgets/EmptyWidgetOptions';\nvar REQUIRED_DEF_FIELDS = ['name', 'version', 'icon'];\n\nvar BaseWidget = /*#__PURE__*/function () {\n  function BaseWidget(definition) {\n    _classCallCheck(this, BaseWidget);\n\n    var _iterator = _createForOfIteratorHelper(REQUIRED_DEF_FIELDS),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var reqField = _step.value;\n\n        if (!(reqField in definition)) {\n          throw new Error(\"\".concat(reqField, \" is a required property of new widgets.\"));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    for (var _i = 0, _Object$keys = _Object$keys2(definition); _i < _Object$keys.length; _i++) {\n      var defField = _Object$keys[_i];\n      this[defField] = definition[defField];\n    }\n  }\n\n  _createClass(BaseWidget, [{\n    key: \"Widget\",\n    get: function get() {\n      return EmptyWidget;\n    }\n  }, {\n    key: \"Options\",\n    get: function get() {\n      return EmptyWidgetOptions;\n    }\n  }]);\n\n  return BaseWidget;\n}();\n\nexport { BaseWidget as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/project/digitalsignage-master (2)/digitalsignage-master/widgets/base_widget.js"],"names":["EmptyWidget","EmptyWidgetOptions","REQUIRED_DEF_FIELDS","BaseWidget","definition","reqField","Error","defField"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,WAAP,MAAwB,mCAAxB;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AAEA,IAAMC,mBAAmB,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,MAApB,CAA5B;;IAEqBC,U;AACnB,sBAAYC,UAAZ,EAAwB;AAAA;;AAAA,+CACCF,mBADD;AAAA;;AAAA;AACtB,0DAA4C;AAAA,YAAjCG,QAAiC;;AAC1C,YAAI,EAAEA,QAAQ,IAAID,UAAd,CAAJ,EAA+B;AAC7B,gBAAM,IAAIE,KAAJ,WAAaD,QAAb,6CAAN;AACD;AACF;AALqB;AAAA;AAAA;AAAA;AAAA;;AAMtB,oCAAuB,cAAYD,UAAZ,CAAvB,kCAAgD;AAA3C,UAAMG,QAAQ,mBAAd;AACH,WAAKA,QAAL,IAAiBH,UAAU,CAACG,QAAD,CAA3B;AACD;AACF;;;;wBAEY;AACX,aAAOP,WAAP;AACD;;;wBAEa;AACZ,aAAOC,kBAAP;AACD;;;;;;SAlBkBE,U","sourcesContent":["import EmptyWidget from '../components/Widgets/EmptyWidget'\nimport EmptyWidgetOptions from '../components/Widgets/EmptyWidgetOptions'\n\nconst REQUIRED_DEF_FIELDS = ['name', 'version', 'icon']\n\nexport default class BaseWidget {\n  constructor(definition) {\n    for (const reqField of REQUIRED_DEF_FIELDS) {\n      if (!(reqField in definition)) {\n        throw new Error(`${reqField} is a required property of new widgets.`)\n      }\n    }\n    for (const defField of Object.keys(definition)) {\n      this[defField] = definition[defField]\n    }\n  }\n\n  get Widget() {\n    return EmptyWidget\n  }\n\n  get Options() {\n    return EmptyWidgetOptions\n  }\n}\n"]},"metadata":{},"sourceType":"module"}