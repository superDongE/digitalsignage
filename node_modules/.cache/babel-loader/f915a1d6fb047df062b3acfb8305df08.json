{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseWidget from '../base_widget';\nimport ListContent from './src/ListContent';\nimport ListOptions from './src/ListOptions';\n\nvar List = /*#__PURE__*/function (_BaseWidget) {\n  _inherits(List, _BaseWidget);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _super.call(this, {\n      name: 'List',\n      version: '0.1',\n      icon: 'list',\n      defaultData: {\n        title: null,\n        color: '#34495e',\n        textColor: '#ffffff',\n        list: [{\n          text: '',\n          label: null\n        }]\n      }\n    });\n  }\n\n  _createClass(List, [{\n    key: \"Widget\",\n    get: function get() {\n      return ListContent;\n    }\n  }, {\n    key: \"Options\",\n    get: function get() {\n      return ListOptions;\n    }\n  }]);\n\n  return List;\n}(BaseWidget);\n\nexport { List as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/digitalsignage-master/widgets/list/index.js"],"names":["BaseWidget","ListContent","ListOptions","List","name","version","icon","defaultData","title","color","textColor","list","text","label"],"mappings":";;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;IAEqBC,I;;;;;AACnB,kBAAc;AAAA;;AAAA,6BACN;AACJC,MAAAA,IAAI,EAAE,MADF;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,IAAI,EAAE,MAHF;AAIJC,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,IADI;AAEXC,QAAAA,KAAK,EAAE,SAFI;AAGXC,QAAAA,SAAS,EAAE,SAHA;AAIXC,QAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,KAAK,EAAE;AAAnB,SAAD;AAJK;AAJT,KADM;AAYb;;;;wBAEY;AACX,aAAOZ,WAAP;AACD;;;wBAEa;AACZ,aAAOC,WAAP;AACD;;;;EArB+BF,U;;SAAbG,I","sourcesContent":["import BaseWidget from '../base_widget'\nimport ListContent from './src/ListContent'\nimport ListOptions from './src/ListOptions'\n\nexport default class List extends BaseWidget {\n  constructor() {\n    super({\n      name: 'List',\n      version: '0.1',\n      icon: 'list',\n      defaultData: {\n        title: null,\n        color: '#34495e',\n        textColor: '#ffffff',\n        list: [{ text: '', label: null }]\n      }\n    })\n  }\n\n  get Widget() {\n    return ListContent\n  }\n\n  get Options() {\n    return ListOptions\n  }\n}\n"]},"metadata":{},"sourceType":"module"}